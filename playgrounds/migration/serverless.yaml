service: dynamodb-streams

frameworkVersion: ">=1.21.0 =<2.19.0"

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1
  environment:
    AWS_REGION: ${self:provider.region}
    DATA_API_SECRET_ARN: arn:aws:secretsmanager:us-east-1:123456789012:secret:example
    DATA_API_RESOURCE_ARN: arn:aws:rds:us-east-1:123456789012:cluster:example
    DATA_API_DATABASE_NAME: migrations
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "secretsmanager:GetSecretValue"
      Resource:
        - ${self:provider.environment.DATA_API_SECRET_ARN}
    - Effect: Allow
      Action:
        - "rds-data:*"
      Resource:
        - ${self:provider.environment.DATA_API_RESOURCE_ARN}

plugins:
  - serverless-dynamodb-local
  - "@apilogic/migration-tool-serverless"
  - serverless-offline
custom:
  accountId: sdsfsdf
  serviceRole: sdsfsd
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
  webpack:
    webpackConfig: '../../webpack.config.js'
    includeModules: true
    packager: 'npm'
    packExternalModulesMaxBuffer: 204800
  DataAPIMigrations:
    migrationSourceClient:
      clientType: AMAZON_DYNAMODB #only dynamo
      config:
        description: 'Migrations table'
        endpoint: "http://localhost:8000"
        region: localhost
        tableName: 'Migrations'
    migrationTargetClient:
      clientType: AMAZON_ELASTICSEARCH
      config:
        endpoint: localhost:9200 # required # "https://{DOMAIN}.{REGION}.es.amazonaws.com"
        serviceRoleArn: "arn:aws:iam::${self:custom.accountId}:role/ElasticSearch-${self:custom.serviceRole}"
        region: localhost
        devmode: true